ggtree(Tree, layout="circular") +
theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5)
geom_tiplab()
?ggtree
Tree <- read.tree(file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbus--Article--Ultra.FINAL.raxml.support")
ggtree(Tree, layout="circular") +
geom_rootpoint() +
geom_tiplab(align=TRUE, linesize=.5)
ggsave(file = "FPGP--Phylogeny.pdf", device = cairo_pdf, width = 40, height = 15, dpi = 1000)
ggsave(file = "FPGP--Phylogeny.pdf", device = cairo_pdf, width = 20, height = 40, dpi = 1000)
ggsave(file = "FPGP--Phylogeny.pdf", device = cairo_pdf, width = 40, height = 40, dpi = 1000)
ggsave(file = "FPGP--Phylogeny.pdf", device = cairo_pdf, width = 20, height = 20, dpi = 1000)
?ggtree::reroot
?reroot
?ggtree
Tree <- read.tree(file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbus--Article--Ultra.FINAL.raxml.support")
ggtree(Tree, layout="circular") +
geom_rootpoint() +
geom_tiplab(align=TRUE, linesize=.5) +
theme(panel.background = element_rect(fill = '#000000'),
panel.grid.minor.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.spacing = unit(0.2, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")))
Tree <- read.tree(file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbus--Article--Ultra.FINAL.raxml.support")
ggtree(Tree, layout="circular") +
geom_rootpoint() +
geom_tiplab(align=TRUE, linesize=.5) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.spacing = unit(0.2, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")))
Tree <- read.tree(file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbus--Article--Ultra.FINAL.raxml.support")
ggtree(Tree, layout="circular") +
geom_rootpoint() +
geom_tiplab(align = TRUE, linesize = .5) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")))
Tree
Tree <- read.tree(file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbus--Article--Ultra.FINAL.raxml.support")
ggtree(Tree, layout="circular") +
geom_rootpoint() +
geom_tiplab(align = TRUE, linesize = .5) +
geom_label_repel(aes(label=bootstrap, fill=bootstrap)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")))
pacman::p_load(ggtree, ggplot2, grepel, extrafont, treeio)
pacman::p_load(ggtree, ggplot2, ggrepel, extrafont, treeio)
Tree <- read.tree(file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbus--Article--Ultra.FINAL.raxml.support")
ggtree(Tree, layout="circular") +
geom_rootpoint() +
geom_tiplab(align = TRUE, linesize = .5) +
geom_label_repel(aes(label=bootstrap, fill=bootstrap)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")))
install_github("drveera/ggman")
library(devtools)
install.packages("devtools")
library(ggman)
install_github("drveera/ggman")
library("devtools")
install_github("drveera/ggman")
library(ggman)
### The BEGINNING ~~~~
##
# > Plots FPGP--MDS | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(optparse, ggplot2, plyr, RColorBrewer, extrafont)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Loads list of options:
option_list <- list(make_option(c('-i','--in_file'), action = 'store', type = 'character', default = "stdin", help = 'Input file'),
make_option(c('-a','--annot'), action = 'store', type = 'character', default = NULL, help = 'File with indiv annotations'),
make_option(c('--id_column'), action = 'store', type = 'numeric', default = 1, help = 'Column to use as ID'),
make_option(c('-L','--in_maj_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MAJOR label'),
make_option(c('-l','--in_min_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MINOR label'),
make_option(c('--no_header'), action = 'store_true', type = 'logical', default = FALSE, help = 'Input file has no header'),
make_option(c('--var_excl'), action = 'store', type = 'character', default = NULL, help = 'Variables to exclude from analysis'))
# Defines parameters:
opt <- parse_args(OptionParser(option_list = option_list))
opt$in_file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra.mds"
opt$annot = "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra.annot"
opt$id_column = 1
opt$in_maj_labels = "Location"
# Reads data
data <- read.table(opt$in_file, row.names = 1, sep = "\t", header = !opt$no_header, stringsAsFactors = FALSE, check.names = FALSE)
n <- ncol(data)
# Reads annotation file
if(!is.null(opt$annot)){
annot <- read.table(opt$annot, sep = "\t", header = TRUE, stringsAsFactors=FALSE)
data <- merge(data, annot, by.x = 0, by.y = opt$id_column)
# Gets rownames back into place:
rownames(data) <- data[,1]; data <- data[,-1]
data[colnames(annot)[opt$id_column]] <- rownames(data)}
# Excludes variables:
if( !is.null(opt$var_excl)){
opt$var_excl <- unlist(strsplit(opt$var_excl, ","))
data <- data[!(rownames(data) %in% opt$var_excl),]}
# Sets plot title
if(is.null(opt$plot_title))
opt$plot_title <- basename(opt$in_file)
# Gets Major labels mean location
colors <- NULL
if(!is.null(opt$in_maj_labels)){
# Merge Major labels
in_maj_labels <- unlist(strsplit(opt$in_maj_labels, ",", fixed = TRUE))
tmp_data <- data[,in_maj_labels[1]]
data[in_maj_labels[1]] <- NULL
if(length(in_maj_labels) > 1){
for (cnt in 2:length(in_maj_labels)){
tmp_data <- paste(tmp_data, data[,in_maj_labels[cnt]], sep="/")
data[in_maj_labels[cnt]] <- NULL}
opt$in_maj_labels <- "MERGE"}
# Make sure Major label column is after data
data <- data.frame(data, tmp_data)
colnames(data)[ncol(data)] <- opt$in_maj_labels
# Converts to factor, in case there is a Major label with just numbers
data[,opt$in_maj_labels] <- factor(data[,opt$in_maj_labels])
# If label was in input file, decreases number of data columns
if(is.null(opt$annot) || !opt$in_maj_labels %in% colnames(annot))
n = n - 1
# Gets mean value for Major label
data_mean <- ddply(data, opt$in_maj_labels, function(x){colMeans(x[, 1:n], na.rm = TRUE)})
colors <- as.character(opt$in_maj_labels)}
# Reorganises the data:
data$Location <- factor(data$Location, ordered = T, levels = c("America", "SaltLakeCity", "Denver", "Virginia", "Monterrey", "MexicoCity", "TlaxcalaDeXicohtencatl", "SanCristobalDeLasCasas", "Santiago", "Salvador", "Tatui","",
"Europe","FaroeIslands", "Copenhagen", "Cambridge","London","Berlin","Prague", "Jihlava","Vernelle","Barcelona","Guimaraes","Lisbon","Sardinia","Crete", " ",
"Africa","Nairobi","Johannesburg","  ",
"Asia","Lahijan","Nowshahr","Tehran","Isfahan","Abadeh", "TelAviv","TelAvivColony","WadiHidan","Colombo", "PigeonIsland","Trincomalee", "   ",
"Oceania","Perth"))
MDS_12 <-
ggplot(data, aes_string(x = "D1_3.25448642972517", y = "D2_1.88108101324778", colour = "Location")) +
geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_colour_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 2 (1.88%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3),
legend.key = element_blank(),
legend.position = c(.935, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3,
shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol = 1))
ggsave(MDS_12, "FPGP--MDS.pdf", device = cairo_pdf, height = 15, width = 18, scale = 0.825, dpi = 1000)
ggsave(MDS_12, file = "FPGP--MDS.pdf", device = cairo_pdf, height = 15, width = 18, scale = 0.825, dpi = 1000)
### The BEGINNING ~~~~
##
# > Plots FPGP--ngsAdmix | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(optparse, ggplot2, plyr, RColorBrewer, extrafont, gtable, grid)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Reads data
samples <- read.table("GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads annotation file
ids <- read.table("GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives.annot", stringsAsFactors = FALSE, sep = "\t", header = TRUE)
# Reorganises the data:
ids$Location <- factor(ids$Location, ordered = T, levels=c("SaltLakeCity","Denver","Virginia","Monterrey","MexicoCity","TlaxcalaDeXicohtencatl","SanCristobalDeLasCasas","Santiago","Salvador",
"Tatui","FaroeIslands","Copenhagen","Cambridge","London","Berlin","Prague","Jihlava","Vernelle","Barcelona","Guimaraes","Lisbon","Sardinia","Crete",
"Nairobi","Johannesburg","Lahijan","Nowshahr","Tehran","Isfahan","Abadeh", "TelAviv","TelAvivColony","WadiHidan","Colombo",
"PigeonIsland","Trincomalee","Perth"))
# Defines parameters:
sampleid = "Sample_ID"
target = "Location"
# Ask Sama:
data_for_plot <- data.frame()
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),
# Ask Sama 2:
x <- list(c(16,14,7,3,2,12,6,11,19,15,8,9,17,5,4,18,13,20,10,1),
c(9,5,14,4,19,16,15,11,3,10,6,8,12,17,2,13,18,7,1),
c(7,2,11,15,10,16,13,3,5,4,6,14,18,12,8,1,9,17),
c(12,9,17,7,5,11,4,14,2,15,16,10,13,8,6,3,1),
c(16,5,9,10,2,11,15,6,13,14,12,7,1,8,3,4),
c(8,15,13,5,1,12,4,11,2,6,7,3,14,9,10),
c(7,2,1,3,14,8,5,12,9,10,13,6,11,4),
c(4,6,11,9,7,8,2,13,10,1,5,3,12),
c(1,12,8,9,2,7,6,11,5,4,10,3),
c(11,9,1,7,2,10,5,6,4,8,3),
c(5,9,6,4,2,1,7,3,8,10),
c(6,9,4,2,5,8,7,3,1),
c(7,2,5,3,1,8,4,6),
c(6,7,4,2,3,5,1),
c(1,3,5,2,4,6),
c(1,3,4,5,2),
c(2,3,1,4),
c(2,1,3),
c(1,2))
# Ask Sama 3:
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(value = data[,i])
temp$k <- as.factor(rep(i, times = length(temp$value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$k_value <- as.factor(rep(paste("k = ", dim(data)[2], sep = ""), times = length(temp$value)))
temp <- merge(ids, temp)
data_for_plot <- rbind(data_for_plot, temp)}}
# Ask Sama 4:
x_lab <- (sampleid)
# Creates ngsAmix plots:
ngsAdmix <-
ggplot(data_for_plot, aes(x = get(sampleid), y = value, fill = k)) + labs(x = x_lab) +
geom_bar(stat = "identity", width = 0.85) +
facet_grid(k_value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
theme(panel.background = element_rect(fill = '#000000'),
panel.grid.minor.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.spacing = unit(0.2, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")))
ngsAdmix_G <- ggplotGrob(ngsAdmix)
ngsAdmix_G <- gtable_add_rows(ngsAdmix_G, unit(1, "cm"), pos = 5)
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#df65b0", size = .75, lwd = 0.25)), textGrob("America", gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 4, b = 6, r = 23, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#045a8d", size = .75, lwd = 0.25)), textGrob("Europe",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 25, b = 6, r = 49, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#d0d1e6", size = .5, lwd = 0.25)), textGrob("Africa",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 51, b = 6, r = 53, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#a6bddb", size = .5, lwd = 0.25)), textGrob("Middle East",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 55, b = 6, r = 69, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#2b8cbe", size = .5, lwd = 0.25)), textGrob("South Asia",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 71, b = 6, r = 75, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#c51b8a", size = .5, lwd = 0.25)), textGrob("Oceania",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 77, b = 6, r = 77, name = c("a", "b"))
print(ngsAdmix_G)
ngsAdmix_G <- gtable_add_rows(ngsAdmix_G, unit(2/10, "line"), 6)
grid.newpage()
grid.draw(ngsAdmix_G)
ggsave(ngsAdmix_G, file = "FPGP--ngsAdmix.pdf", device = cairo_pdf, width = 40, height = 15, dpi = 1000)
### The BEGINNING ~~~~
##
# > Plots FPGP--PopGenEstimates | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(ggplot2, scales)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Loads the data
### The BEGINNING ~~~~
##
# > Plots FPGP--PopGenEstimates | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(ggplot2, scales, extrafont)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
a <- read.table("FPGP--GoodSamples_NoSrisoriaNoCpalumbus-DoSaf-WithWrapper-DoThetas-NoWrapper--Article--Ultra.PopGenSummary.txt", sep = "\t", header = FALSE)
Data <- read.table("GoodSamples_NoSrisoriaNoCpalumbus-DoSaf-WithWrapper-DoThetas-NoWrapper.PopGenSummary", sep = "\t", header = FALSE)
colnames(Data) <- c("Population", "NSites", "Pi", "tW", "Td")
Data$Population <- factor(Data$Population, ordered = T, levels = c("Cpalumbus", "PigeonIsland", "Trincomalee", "Abadeh", "Tehran", "Crete", "Sardinia", "Vernelle", "Torshavn", "TelAviv", "TelAvivColony", "WadiHidan",
"Nairobi", "Colombo", "Lahijan", "Nowshahr", "Isfahan", "Guimaraes", "Barcelona", "Lisbon", "Salvador", "Tatui", "Denver", "Santiago", "SaltLakeCity",
"TlaxcalaDeXicohtencatl", "MexicoCity", "Monterrey", "SanCristobalDeLasCasas", "Prague", "Berlin", "Copenhagen",  "Johannesburg", "London",  "Perth"))
ggplot(Data, aes(factor(Population), tW)) + geom_point(fill = "#F79999", size= 2) +
labs(x = Data$Population, y = "Watson's Theta") +
theme(panel.background = element_rect(fill = '#FAFAFA'), panel.grid.minor=element_blank(), panel.border = element_blank()) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
theme(axis.title.x=element_blank(),
axis.title.y = element_text(size=22, face="bold", color="#000000", margin = margin(t = 0, r = 20, b = 0, l = 0))) +
theme(axis.text.x = element_text(colour="#000000", size=16, angle=90, vjust=0.5, hjust=1),
axis.text.y = element_text(color="#000000", size=16)) +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_line(color="#000000", size=0.3)) +
theme(legend.position = "none")
ggplot(Data, aes(factor(Population), tW)) + geom_point(fill = "#F79999", size= 2) +
labs(x = Data$Population, y = "Watson's Theta") +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = 0.3),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 22, face = "bold", color = "#000000", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(colour="#000000", size = 16, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_line(color="#000000", size=0.3),
legend.position = "none")
ggplot(Data, aes(factor(Population), tW)) + geom_point(fill = "#F79999", size= 2) +
labs(x = Data$Population, y = "Watson's Theta") +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = 0.3),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 22, face = "bold", color = "#000000", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(colour="#000000", size = 16, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_line(color="#000000", size=0.3),
legend.position = "none")
### The BEGINNING ~~~~
##
# > Plots FPGP--ngsAdmix | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(optparse, ggplot2, plyr, RColorBrewer, extrafont, gtable, grid)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Loads the data:
samples <- read.table("GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads the annotation file:
ids <- read.table("GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives.annot", stringsAsFactors = FALSE, sep = "\t", header = TRUE)
# Reorganises the data:
ids$Location <- factor(ids$Location, ordered = T, levels = c("SaltLakeCity","Denver","Virginia","Monterrey","MexicoCity","TlaxcalaDeXicohtencatl","SanCristobalDeLasCasas","Santiago","Salvador",
"Tatui","FaroeIslands","Copenhagen","Cambridge","London","Berlin","Prague","Jihlava","Vernelle","Barcelona","Guimaraes","Lisbon","Sardinia","Crete",
"Nairobi","Johannesburg","Lahijan","Nowshahr","Tehran","Isfahan","Abadeh", "TelAviv","TelAvivColony","WadiHidan","Colombo",
"PigeonIsland","Trincomalee","Perth"))
# Defines parameters:
sampleid = "Sample_ID"
target = "Location"
# Ask Sama:
data_for_plot <- data.frame()
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),
# Ask Sama 2:
x <- list(c(16,14,7,3,2,12,6,11,19,15,8,9,17,5,4,18,13,20,10,1),
c(9,5,14,4,19,16,15,11,3,10,6,8,12,17,2,13,18,7,1),
c(7,2,11,15,10,16,13,3,5,4,6,14,18,12,8,1,9,17),
c(12,9,17,7,5,11,4,14,2,15,16,10,13,8,6,3,1),
c(16,5,9,10,2,11,15,6,13,14,12,7,1,8,3,4),
c(8,15,13,5,1,12,4,11,2,6,7,3,14,9,10),
c(7,2,1,3,14,8,5,12,9,10,13,6,11,4),
c(4,6,11,9,7,8,2,13,10,1,5,3,12),
c(1,12,8,9,2,7,6,11,5,4,10,3),
c(11,9,1,7,2,10,5,6,4,8,3),
c(5,9,6,4,2,1,7,3,8,10),
c(6,9,4,2,5,8,7,3,1),
c(7,2,5,3,1,8,4,6),
c(6,7,4,2,3,5,1),
c(1,3,5,2,4,6),
c(1,3,4,5,2),
c(2,3,1,4),
c(2,1,3),
c(1,2))
# Ask Sama 3:
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(value = data[,i])
temp$k <- as.factor(rep(i, times = length(temp$value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$k_value <- as.factor(rep(paste("k = ", dim(data)[2], sep = ""), times = length(temp$value)))
temp <- merge(ids, temp)
data_for_plot <- rbind(data_for_plot, temp)}}
# Ask Sama 4:
x_lab <- (sampleid)
# Creates the plots:
ngsAdmix <-
ggplot(data_for_plot, aes(x = get(sampleid), y = value, fill = k)) + labs(x = x_lab) +
geom_bar(stat = "identity", width = 0.85) +
facet_grid(k_value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
theme(panel.background = element_rect(fill = '#000000'),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(0.2, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 6, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0.1, 0, 0.1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 7, angle = 270, margin = margin(0, 0.1, 0, 0.1, "cm")),
legend.position = "none")
ngsAdmix_G <- ggplotGrob(ngsAdmix)
ngsAdmix_G <- gtable_add_rows(ngsAdmix_G, unit(1, "cm"), pos = 5)
# Adds top strips:
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#df65b0", size = .75, lwd = 0.25)), textGrob("America", gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 4, b = 6, r = 23, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#045a8d", size = .75, lwd = 0.25)), textGrob("Europe",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 25, b = 6, r = 49, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#d0d1e6", size = .5, lwd = 0.25)), textGrob("Africa",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 51, b = 6, r = 53, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#a6bddb", size = .5, lwd = 0.25)), textGrob("Middle East",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 55, b = 6, r = 69, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#2b8cbe", size = .5, lwd = 0.25)), textGrob("South Asia",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 71, b = 6, r = 75, name = c("a", "b"))
ngsAdmix_G <- gtable_add_grob(ngsAdmix_G, list(rectGrob(gp = gpar(col = "#000000", fill = "#c51b8a", size = .5, lwd = 0.25)), textGrob("Oceania",gp = gpar(cex = .75, fontface = 'bold', col = "black"))), t = 6, l = 77, b = 6, r = 77, name = c("a", "b"))
ngsAdmix_G <- gtable_add_rows(ngsAdmix_G, unit(2/10, "line"), 6)
# Creates & Saves the final Map Panel:
grid.newpage()
grid.draw(ngsAdmix_G)
ggsave(ngsAdmix_G, file = "FPGP--ngsAdmix.pdf", device = cairo_pdf, width = 40, height = 15, dpi = 1000)
#
##
### The END ~~~~
### The BEGINNING ~~~~
##
# > Plots FPGP--PopGenEstimates | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(ggplot2, scales, extrafont)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Loads the data
Data <- read.table("GoodSamples_NoSrisoriaNoCpalumbus-DoSaf-WithWrapper-DoThetas-NoWrapper.PopGenSummary", sep = "\t", header = FALSE)
colnames(Data) <- c("Population", "NSites", "Pi", "tW", "Td")
# Reorganises the data:
Data$Population <- factor(Data$Population, ordered = T, levels = c("Cpalumbus", "PigeonIsland", "Trincomalee", "Abadeh", "Tehran", "Crete", "Sardinia", "Vernelle", "Torshavn", "TelAviv", "TelAvivColony", "WadiHidan",
"Nairobi", "Colombo", "Lahijan", "Nowshahr", "Isfahan", "Guimaraes", "Barcelona", "Lisbon", "Salvador", "Tatui", "Denver", "Santiago", "SaltLakeCity",
"TlaxcalaDeXicohtencatl", "MexicoCity", "Monterrey", "SanCristobalDeLasCasas", "Prague", "Berlin", "Copenhagen",  "Johannesburg", "London",  "Perth"))
# Creates the plots:
ggplot(Data, aes(factor(Population), tW)) +
geom_point(fill = "#F79999", size= 2) +
labs(x = Data$Population, y = "Watson's Theta") +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = 0.3),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 22, face = "bold", color = "#000000", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.x = element_text(colour="#000000", size = 16, angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_line(color="#000000", size=0.3),
legend.position = "none")
