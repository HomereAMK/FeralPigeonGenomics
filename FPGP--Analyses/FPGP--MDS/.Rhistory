ggplot(data, aes_string(x="D1_3.25448642972517", y="D3_1.49711709599922", colour="Location")) + geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_colour_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 3 (1.50%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(legend.key = element_blank()) +
theme(legend.title=element_blank()) +
theme(axis.title=element_text(size=13, face="bold")) +
theme(legend.text=element_text(size=11)) +
theme(legend.position=c(.935, 0.5)) +
theme(panel.background = element_rect(fill = '#FAFAFA')) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
theme(panel.border = element_blank()) +
guides(colour=guide_legend(override.aes=list(alpha=1, size=3, shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol=1)) +
coord_cartesian(xlim=opt$plot_x_limits, ylim=opt$plot_y_limits) +
theme(legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3)) +
theme(axis.text.x = element_text(color="#000000", size=11),
# angle=270, vjust=0.5, hjust=1
axis.text.y = element_text(color="#000000", size=11)) +
theme(axis.ticks.x = element_line(color="#000000", size=0.3), axis.ticks.y = element_line(color="#000000", size=0.3))
ggplot() +
geom_point(data, aes_string(x="D1_3.25448642972517", y="D3_1.49711709599922", colour="Location"), alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_colour_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 3 (1.50%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(legend.key = element_blank()) +
theme(legend.title=element_blank()) +
theme(axis.title=element_text(size=13, face="bold")) +
theme(legend.text=element_text(size=11)) +
theme(legend.position=c(.935, 0.5)) +
theme(panel.background = element_rect(fill = '#FAFAFA')) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
theme(panel.border = element_blank()) +
guides(colour=guide_legend(override.aes=list(alpha=1, size=3, shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1,
10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol=1)) +
coord_cartesian(xlim=opt$plot_x_limits, ylim=opt$plot_y_limits) +
theme(legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3)) +
theme(axis.text.x = element_text(color="#000000", size=11),
# angle=270, vjust=0.5, hjust=1
axis.text.y = element_text(color="#000000", size=11)) +
theme(axis.ticks.x = element_line(color="#000000", size=0.3), axis.ticks.y = element_line(color="#000000", size=0.3))
ggplot(data, aes_string(x="D1_3.25448642972517", y="D3_1.49711709599922", colour="Location")) +
geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_colour_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 3 (1.50%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(legend.key = element_blank()) +
theme(legend.title=element_blank()) +
theme(axis.title=element_text(size=13, face="bold")) +
theme(legend.text=element_text(size=11)) +
theme(legend.position=c(.935, 0.5)) +
theme(panel.background = element_rect(fill = '#FAFAFA')) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
theme(panel.border = element_blank()) +
guides(colour=guide_legend(override.aes=list(alpha=1, size=3, shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1,
10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol=1)) +
coord_cartesian(xlim=opt$plot_x_limits, ylim=opt$plot_y_limits) +
theme(legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3)) +
theme(axis.text.x = element_text(color="#000000", size=11),
# angle=270, vjust=0.5, hjust=1
axis.text.y = element_text(color="#000000", size=11)) +
theme(axis.ticks.x = element_line(color="#000000", size=0.3), axis.ticks.y = element_line(color="#000000", size=0.3))
Layka <-
ggplot(data, aes_string(x="D1_3.25448642972517", y="D3_1.49711709599922", colour="Location")) +
geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_colour_manual(values=c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop=FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 3 (1.50%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(legend.key = element_blank()) +
theme(legend.title=element_blank()) +
theme(axis.title=element_text(size=13, face="bold")) +
theme(legend.text=element_text(size=11)) +
theme(legend.position=c(.935, 0.5)) +
theme(panel.background = element_rect(fill = '#FAFAFA')) +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank()) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
theme(panel.border = element_blank()) +
guides(colour=guide_legend(override.aes=list(alpha=1, size=3, shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1,
10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol=1)) +
coord_cartesian(xlim=opt$plot_x_limits, ylim=opt$plot_y_limits) +
theme(legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3)) +
theme(axis.text.x = element_text(color="#000000", size=11),
# angle=270, vjust=0.5, hjust=1
axis.text.y = element_text(color="#000000", size=11)) +
theme(axis.ticks.x = element_line(color="#000000", size=0.3), axis.ticks.y = element_line(color="#000000", size=0.3))
ggsave(Layka, "Aiiiiiiiiiiiiiiiiiiii.pdf", height=15, width=18, scale=1, dpi = 1000)
ggsave(Layka, "Aiiiiiiiiiiiiiiiiiiii.pdf", device = cairo_pdf, height=15, width=18, scale=1, dpi = 1000)
Layka
ggsave(Layka, "Aiiiiiiiiiiiiiiiiiiii.pdf", device = NULL, height=15, width=18, scale=1, dpi = 1000)
### The BEGINNING ~~~~
##
# > Plots FPGP--MDS | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(optparse, ggplot2, plyr, RColorBrewer, extrafont)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Ask Filipe about this:
# Loads list of options:
option_list <- list(make_option(c('-i','--in_file'), action = 'store', type = 'character', default = "stdin", help = 'Input file'),
make_option(c('--no_header'), action = 'store_true', type = 'logical', default = FALSE, help = 'Input file has no header'),
make_option(c('--var_excl'), action = 'store', type = 'character', default = NULL, help = 'Variables to exclude from analysis'),
make_option(c('-a','--annot'), action = 'store', type = 'character', default = NULL, help = 'File with indiv annotations'),
make_option(c('--id_column'), action = 'store', type = 'numeric', default = 1, help = 'Column to use as ID'),
make_option(c('-L','--in_maj_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MAJOR label'),
make_option(c('-l','--in_min_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MINOR label'),
make_option(c('-c','--in_colors'), action = 'store', type = 'character', default = NULL, help = 'Column from input file to use as individual colors'),
make_option(c('-s','--plot_size'), action = 'store', type = 'numeric', default = 1, help = 'Plot size'),
make_option(c('-t','--plot_title'), action = 'store', type = 'character', default = NULL, help = 'Plot title'),
make_option(c('-x', '--plot_x_limits'), action = 'store', type = 'character', default = NULL, help = 'Comma-sepparated values for plot X-axis limits (eg: "-1,1")'),
make_option(c('-y', '--plot_y_limits'), action = 'store', type = 'character', default = NULL, help = 'Comma-sepparated values for plot Y-axis limits (eg: "-1,1")'),
make_option(c('-o','--out_file'), action = 'store', type = 'character', default = NULL, help = 'Output file'),
make_option(c('--debug'), action = 'store_true', type = 'logical', default = FALSE, help = 'Debug mode'))
# Defines parameters:
opt <- parse_args(OptionParser(option_list = option_list))
opt$in_file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra.mds"
opt$annot = "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra.annot"
opt$id_column = 1
opt$in_maj_labels = "Location"
### Checks plot X-axis limits
if(!is.null(opt$plot_x_limits))
opt$plot_x_limits <- as.numeric( gsub("\\(|\\)|\"", "", strsplit(opt$plot_x_limits, ",", fixed = TRUE)[[1]]) )
### Checks plot Y-axis limits
if(!is.null(opt$plot_y_limits))
opt$plot_y_limits <- as.numeric( gsub("\\(|\\)|\"", "", strsplit(opt$plot_y_limits, ",", fixed = TRUE)[[1]]) )
### Reads data
cat("# \tReading input file...", fill = TRUE)
data <- read.table(opt$in_file, row.names = 1, sep = "\t", header = !opt$no_header, stringsAsFactors = FALSE, check.names = FALSE)
n <- ncol(data)
if(opt$debug)
print(data)
# Reads annotation file
if(!is.null(opt$annot)){
cat("# \tReading annotations file...", fill = TRUE)
annot <- read.table(opt$annot, sep = "\t", header = TRUE, stringsAsFactors=FALSE)
if(opt$debug)
print(annot)
data <- merge(data, annot, by.x = 0, by.y = opt$id_column)
# Gets rownames back into place:
rownames(data) <- data[,1]; data <- data[,-1]
data[colnames(annot)[opt$id_column]] <- rownames(data)}
# Excludes variables:
if( !is.null(opt$var_excl) ) {
cat("# \tExcluding variables...", fill = TRUE)
opt$var_excl <- unlist(strsplit(opt$var_excl, ","))
data <- data[!(rownames(data) %in% opt$var_excl),]}
# Sets plot title
if(is.null(opt$plot_title))
opt$plot_title <- basename(opt$in_file)
# Gets Major labels mean location
colors <- NULL
if(!is.null(opt$in_maj_labels)){
cat("# Calculating Major labels...", fill = TRUE)
# Merge Major labels
in_maj_labels <- unlist(strsplit(opt$in_maj_labels, ",", fixed = TRUE))
tmp_data <- data[,in_maj_labels[1]]
data[in_maj_labels[1]] <- NULL
if(length(in_maj_labels) > 1){
for (cnt in 2:length(in_maj_labels)){
tmp_data <- paste(tmp_data, data[,in_maj_labels[cnt]], sep="/")
data[in_maj_labels[cnt]] <- NULL}
opt$in_maj_labels <- "MERGE"}
# Make sure Major label column is after data
data <- data.frame(data, tmp_data)
colnames(data)[ncol(data)] <- opt$in_maj_labels
# Converts to factor, in case there is a Major label with just numbers
data[,opt$in_maj_labels] <- factor(data[,opt$in_maj_labels])
# If label was in input file, decreases number of data columns
if(is.null(opt$annot) || !opt$in_maj_labels %in% colnames(annot))
n = n - 1
# Gets mean value for Major label
data_mean <- ddply(data, opt$in_maj_labels, function(x){colMeans(x[, 1:n], na.rm = TRUE)})
colors <- as.character(opt$in_maj_labels)}
# If color variable provided, override previous definitions
if (!is.null(opt$in_colors))
colors <- as.character(opt$in_colors)
##############################################################
head(data)
# Reorganises the data:
data$Location <- factor(data$Location, ordered = T, levels = c("America", "SaltLakeCity", "Denver", "Virginia", "Monterrey", "MexicoCity", "TlaxcalaDeXicohtencatl", "SanCristobalDeLasCasas", "Santiago", "Salvador", "Tatui","",
"Europe","FaroeIslands", "Copenhagen", "Cambridge","London","Berlin","Prague", "Jihlava","Vernelle","Barcelona","Guimaraes","Lisbon","Sardinia","Crete", " ",
"Africa","Nairobi","Johannesburg","  ",
"Asia","Lahijan","Nowshahr","Tehran","Isfahan","Abadeh", "TelAviv","TelAvivColony","WadiHidan","Colombo", "PigeonIsland","Trincomalee", "   ",
"Oceania","Perth"))
ggplot(data, aes_string(x = "D1_3.25448642972517", y = "D2_1.88108101324778", colour = "Location")) + geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_colour_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 2 (1.88%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3),
legend.key = element_blank(),
legend.position = c(.935, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 11),
axis.text.x = element_text(color = "#000000", size = 11),
axis.text.y = element_text(color = "#000000", size = 11),
axis.title = element_text(size = 13, face="bold")) +
theme(axis.ticks.x = element_line(color = "#000000", size = 0.3),
axis.ticks.y = element_line(color = "#000000", size = 0.3)) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3,
shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol = 1)) +
coord_cartesian(xlim = opt$plot_x_limits, ylim = opt$plot_y_limits)
MDS_12 <-
ggplot(data, aes_string(x = "D1_3.25448642972517", y = "D2_1.88108101324778", colour = "Location")) + geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_colour_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 2 (1.88%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3),
legend.key = element_blank(),
legend.position = c(.935, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 11),
axis.text.x = element_text(color = "#000000", size = 11),
axis.text.y = element_text(color = "#000000", size = 11),
axis.title = element_text(size = 13, face="bold")) +
theme(axis.ticks.x = element_line(color = "#000000", size = 0.3),
axis.ticks.y = element_line(color = "#000000", size = 0.3)) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3,
shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol = 1)) +
coord_cartesian(xlim = opt$plot_x_limits, ylim = opt$plot_y_limits)
print(MDS_12)
ggsave(MDS_12, "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra_MDS_1-2.pdf", device = cairo_pdf, height = 15, width = 18, scale = 1, dpi = 1000)
ggplot(data, aes_string(x = "D1_3.25448642972517", y = "D2_1.88108101324778", colour = "Location")) + geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_colour_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 2 (1.88%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3),
legend.key = element_blank(),
legend.position = c(.935, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 11),
axis.text.x = element_text(color = "#000000", size = 11),
axis.text.y = element_text(color = "#000000", size = 11),
axis.title = element_text(size = 13, face="bold")) +
theme(axis.ticks.x = element_line(color = "#000000", size = 0.3),
axis.ticks.y = element_line(color = "#000000", size = 0.3)) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3,
shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol = 1)) +
coord_cartesian(xlim = opt$plot_x_limits, ylim = opt$plot_y_limits)
ggsave("FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra_MDS_1-2.pdf", device = cairo_pdf, height = 15, width = 18, scale = 1, dpi = 1000)
### The BEGINNING ~~~~
##
# > Plots FPGP--MDS | By George PACHECO
# Sets working directory:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages:
pacman::p_load(optparse, ggplot2, plyr, RColorBrewer, extrafont)
# Imports extra fonts:
loadfonts(device = "win", quiet = TRUE)
# Ask Filipe about this:
# Loads list of options:
option_list <- list(make_option(c('-i','--in_file'), action = 'store', type = 'character', default = "stdin", help = 'Input file'),
make_option(c('--no_header'), action = 'store_true', type = 'logical', default = FALSE, help = 'Input file has no header'),
make_option(c('--var_excl'), action = 'store', type = 'character', default = NULL, help = 'Variables to exclude from analysis'),
make_option(c('-a','--annot'), action = 'store', type = 'character', default = NULL, help = 'File with indiv annotations'),
make_option(c('--id_column'), action = 'store', type = 'numeric', default = 1, help = 'Column to use as ID'),
make_option(c('-L','--in_maj_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MAJOR label'),
make_option(c('-l','--in_min_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MINOR label'),
make_option(c('-c','--in_colors'), action = 'store', type = 'character', default = NULL, help = 'Column from input file to use as individual colors'),
make_option(c('-s','--plot_size'), action = 'store', type = 'numeric', default = 1, help = 'Plot size'),
make_option(c('-t','--plot_title'), action = 'store', type = 'character', default = NULL, help = 'Plot title'),
make_option(c('-x', '--plot_x_limits'), action = 'store', type = 'character', default = NULL, help = 'Comma-sepparated values for plot X-axis limits (eg: "-1,1")'),
make_option(c('-y', '--plot_y_limits'), action = 'store', type = 'character', default = NULL, help = 'Comma-sepparated values for plot Y-axis limits (eg: "-1,1")'),
make_option(c('-o','--out_file'), action = 'store', type = 'character', default = NULL, help = 'Output file'),
make_option(c('--debug'), action = 'store_true', type = 'logical', default = FALSE, help = 'Debug mode'))
# Defines parameters:
opt <- parse_args(OptionParser(option_list = option_list))
opt$in_file = "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra.mds"
opt$annot = "FPGP--GoodSamples_NoSrisoriaNoCpalumbusNoCrupestrisNoDuplicatesNoCaptives--Article--Ultra.annot"
opt$id_column = 1
opt$in_maj_labels = "Location"
### Checks plot X-axis limits
if(!is.null(opt$plot_x_limits))
opt$plot_x_limits <- as.numeric( gsub("\\(|\\)|\"", "", strsplit(opt$plot_x_limits, ",", fixed = TRUE)[[1]]) )
### Checks plot Y-axis limits
if(!is.null(opt$plot_y_limits))
opt$plot_y_limits <- as.numeric( gsub("\\(|\\)|\"", "", strsplit(opt$plot_y_limits, ",", fixed = TRUE)[[1]]) )
### Reads data
cat("# \tReading input file...", fill = TRUE)
data <- read.table(opt$in_file, row.names = 1, sep = "\t", header = !opt$no_header, stringsAsFactors = FALSE, check.names = FALSE)
n <- ncol(data)
if(opt$debug)
print(data)
# Reads annotation file
if(!is.null(opt$annot)){
cat("# \tReading annotations file...", fill = TRUE)
annot <- read.table(opt$annot, sep = "\t", header = TRUE, stringsAsFactors=FALSE)
if(opt$debug)
print(annot)
data <- merge(data, annot, by.x = 0, by.y = opt$id_column)
# Gets rownames back into place:
rownames(data) <- data[,1]; data <- data[,-1]
data[colnames(annot)[opt$id_column]] <- rownames(data)}
# Excludes variables:
if( !is.null(opt$var_excl) ) {
cat("# \tExcluding variables...", fill = TRUE)
opt$var_excl <- unlist(strsplit(opt$var_excl, ","))
data <- data[!(rownames(data) %in% opt$var_excl),]}
# Sets plot title
if(is.null(opt$plot_title))
opt$plot_title <- basename(opt$in_file)
# Gets Major labels mean location
colors <- NULL
if(!is.null(opt$in_maj_labels)){
cat("# Calculating Major labels...", fill = TRUE)
# Merge Major labels
in_maj_labels <- unlist(strsplit(opt$in_maj_labels, ",", fixed = TRUE))
tmp_data <- data[,in_maj_labels[1]]
data[in_maj_labels[1]] <- NULL
if(length(in_maj_labels) > 1){
for (cnt in 2:length(in_maj_labels)){
tmp_data <- paste(tmp_data, data[,in_maj_labels[cnt]], sep="/")
data[in_maj_labels[cnt]] <- NULL}
opt$in_maj_labels <- "MERGE"}
# Make sure Major label column is after data
data <- data.frame(data, tmp_data)
colnames(data)[ncol(data)] <- opt$in_maj_labels
# Converts to factor, in case there is a Major label with just numbers
data[,opt$in_maj_labels] <- factor(data[,opt$in_maj_labels])
# If label was in input file, decreases number of data columns
if(is.null(opt$annot) || !opt$in_maj_labels %in% colnames(annot))
n = n - 1
# Gets mean value for Major label
data_mean <- ddply(data, opt$in_maj_labels, function(x){colMeans(x[, 1:n], na.rm = TRUE)})
colors <- as.character(opt$in_maj_labels)}
# If color variable provided, override previous definitions
if (!is.null(opt$in_colors))
colors <- as.character(opt$in_colors)
##############################################################
head(data)
# Reorganises the data:
data$Location <- factor(data$Location, ordered = T, levels = c("America", "SaltLakeCity", "Denver", "Virginia", "Monterrey", "MexicoCity", "TlaxcalaDeXicohtencatl", "SanCristobalDeLasCasas", "Santiago", "Salvador", "Tatui","",
"Europe","FaroeIslands", "Copenhagen", "Cambridge","London","Berlin","Prague", "Jihlava","Vernelle","Barcelona","Guimaraes","Lisbon","Sardinia","Crete", " ",
"Africa","Nairobi","Johannesburg","  ",
"Asia","Lahijan","Nowshahr","Tehran","Isfahan","Abadeh", "TelAviv","TelAvivColony","WadiHidan","Colombo", "PigeonIsland","Trincomalee", "   ",
"Oceania","Perth"))
#MDS_12 <-
ggplot(data, aes_string(x = "D1_3.25448642972517", y = "D2_1.88108101324778", colour = "Location")) + geom_point(alpha = 1, size = 2.2, shape = data$Shape) +
scale_fill_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "##ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_colour_manual(values = c("#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#1b9e77", "#ff7f00", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#F3F3F3", "#F3F3F3",
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#F3F3F3","#F3F3F3",
"#1b9e77", "#a6761d", "#F3F3F3","#F3F3F3", "#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#ff7f00", "#e7298a", "#66a61e", "#e6ab02",
"#F3F3F3","#F3F3F3", "#7570b3"), drop = FALSE) +
scale_x_continuous("Dimension 1 (3.25%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
expand = c(0,0),
limits = c(-0.077, 0.052)) +
scale_y_continuous("Dimension 2 (1.88%)",
breaks = c(-0.050, -0.025, 0, 0.025, 0.050),
expand = c(0,0),
labels = c("-0.050", "-0.025", "0", "0.025", "0.050"),
limits = c(-0.077, 0.052)) +
theme(panel.background = element_rect(fill = '#FAFAFA'),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(fill="#FAFAFA", colour = "#000000", size = 0.3),
legend.key = element_blank(),
legend.position = c(.935, 0.5),
legend.title = element_blank(),
legend.text = element_text(size = 11),
axis.text.x = element_text(color = "#000000", size = 11),
axis.text.y = element_text(color = "#000000", size = 11),
axis.title = element_text(size = 13, face="bold")) +
theme(axis.ticks.x = element_line(color = "#000000", size = 0.3),
axis.ticks.y = element_line(color = "#000000", size = 0.3)) +
theme(axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3,
shape = c(NA, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, NA, NA, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 10, NA, NA, 2, 2, NA, NA,
0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, NA, NA, 14)), ncol = 1)) +
coord_cartesian(xlim = opt$plot_x_limits, ylim = opt$plot_y_limits)
# Creates & Saves the final MDS Panel:
ggsave("Current.pdf", device = cairo_pdf, height = 15, width = 18, scale = 1, dpi = 1000)
#
##
### The END ~~~~
source('C:/Users/ganpa/OneDrive - Danmarks Tekniske Universitet/Skrivebord/DTU-Aqua--Postdoc/Past/Core/FPGP -- FINISHING/FPGP--GitHub/FeralPigeonGenomicsProject/FPGP--MDS/FPGP--MDS.R')
source('C:/Users/ganpa/OneDrive - Danmarks Tekniske Universitet/Skrivebord/DTU-Aqua--Postdoc/Past/Core/FPGP -- FINISHING/FPGP--GitHub/FeralPigeonGenomicsProject/FPGP--MDS/FPGP--MDS.R')
source('C:/Users/ganpa/OneDrive - Danmarks Tekniske Universitet/Skrivebord/DTU-Aqua--Postdoc/Past/Core/FPGP -- FINISHING/FPGP--GitHub/FeralPigeonGenomicsProject/FPGP--MDS/FPGP--MDS.R')
